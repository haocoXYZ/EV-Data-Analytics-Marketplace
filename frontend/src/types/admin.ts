/* ================== PROVIDER ================== */

// Tr·∫°ng th√°i theo flow chu·∫©n
export type ProviderStatus = 'new' | 'pending' | 'kyc' | 'suspended'

export interface ProviderMessage {
  id: string
  type: 'rejection' | 'notice' // d√πng 'rejection' ƒë·ªÉ l∆∞u l√Ω do suspend
  content: string
  createdAt: string
}

export interface ProviderKyc {
  company: string
  legalName?: string
  businessRegNo?: string
  taxCode?: string
  address?: string
  representative?: string
  phone?: string
  bankName?: string
  bankAccount?: string
  documents?: { label: string; url?: string }[]
}

export interface Provider {
  id: string
  name: string
  email: string
  company: string
  datasets: number
  revenue: number // USD
  status: ProviderStatus
  createdAt: string
  kyc?: ProviderKyc
  messages?: ProviderMessage[] // l∆∞u l√Ω do/ghi ch√∫ admin g·ª≠i provider

  /**
   * T√πy ch·ªçn: override t·ªâ l·ªá n·ªÅn t·∫£ng gi·ªØ l·∫°i cho provider n√†y (0-100).
   * N·∫øu kh√¥ng ƒë·∫∑t, h·ªá th·ªëng d√πng c·∫•u h√¨nh chung trong PricingConfig.commission.
   */
  platformPercentOverride?: number
}

/* ================== CUSTOMER ================== */

/* ----------------- Customer: 4 tr·∫°ng th√°i + KYC c√° nh√¢n ----------------- */
export type CustomerStatus = 'new' | 'pending' | 'kyc' | 'suspended'

export interface CustomerMessage {
  id: string
  type: 'rejection' | 'notice'
  content: string
  createdAt: string
}

/** KYC c√° nh√¢n cho kh√°ch h√†ng (consumer) */
export interface CustomerKyc {
  fullName: string               // H·ªç t√™n theo gi·∫•y t·ªù
  dob?: string                   // YYYY-MM-DD (ISO)
  nationalId?: string            // CMND/CCCD/H·ªô chi·∫øu
  address?: string
  phone?: string
  bankName?: string
  bankAccount?: string
  selfieUrl?: string
  idFrontUrl?: string
  idBackUrl?: string
  documents?: { label: string; url?: string }[]
}

export interface Customer {
  id: string
  name: string
  email: string
  org?: string
  purchases: number
  spent: number // USD
  status: CustomerStatus
  createdAt: string
  kyc?: CustomerKyc
  messages?: CustomerMessage[]
}

// Gi·ªØ l·∫°i n·∫øu n∆°i kh√°c c√≤n import
export interface ProviderApproval {
  id: string
  company: string
  contact: string
  email: string
  note?: string
  createdAt: string
}

/* ======= B·ªï sung cho tab B·∫£o m·∫≠t & G·ª≠i th√¥ng b√°o (tu·ª≥ ch·ªçn) ======= */

// Phi√™n ƒëƒÉng nh·∫≠p (mock)
export interface ProviderSession {
  id: string
  device: string
  ip?: string
  ua?: string
  lastSeen?: string
}

// Log g·ª≠i th√¥ng b√°o (mock)
export interface ProviderNotifyLog {
  id: string
  channels: string[]   // ['email','fcm','zalo','inapp']
  title: string
  body: string
  createdAt: string
}

/* ================== PRICING (API / ONE-TIME / MONTHLY) ================== */

/** C√°c k·ª≥ h·∫°n h·ªó tr·ª£ cho g√≥i th√°ng */
export type MonthlyTerm = 1 | 3 | 6 | 9 | 12

/** Meta hi·ªÉn th·ªã cho t·ª´ng g√≥i (ti√™u ƒë·ªÅ, m√¥ t·∫£, t√≠nh nƒÉng) */
export interface PlanMeta {
  /** Ti√™u ƒë·ªÅ hi·ªÉn th·ªã, v√≠ d·ª•: "API", "G√≥i mua 1 l·∫ßn" */
  title: string
  /**
   * M√¥ t·∫£ ng·∫Øn d∆∞·ªõi ti√™u ƒë·ªÅ.
   * V·ªõi g√≥i mua 1 l·∫ßn c√≥ th·ªÉ d√πng placeholder {lookbackDays}.
   */
  description?: string
  /** Danh s√°ch t√≠nh nƒÉng d·∫°ng bullet */
  features: string[]
}

/** G√≥i API tr·∫£ theo request */
export interface PricingPlanApi {
  /** USD / request */
  pricePerRequest: number
  /** ghi ch√∫ th√™m n·∫øu c·∫ßn */
  note?: string
  /** N·ªôi dung hi·ªÉn th·ªã (ti√™u ƒë·ªÅ/m√¥ t·∫£/t√≠nh nƒÉng) */
  meta: PlanMeta
}

/** G√≥i mua 1 l·∫ßn (l·ªãch s·ª≠ t·ª´ X ng√†y tr∆∞·ªõc t·ªõi h√¥m nay) */
export interface PricingPlanOneTime {
  /** USD cho 1 l·∫ßn mua */
  priceUSD: number
  /** L·∫•y d·ªØ li·ªáu t·ª´ (today - lookbackDays) -> today */
  lookbackDays: number
  /** (Tu·ª≥ ch·ªçn) USD cho m·ªói ng√†y d·ªØ li·ªáu b·ªï sung trong ph·∫°m vi lookback */
  perDayUSD?: number            // üëà th√™m field n√†y ƒë·ªÉ FE ƒë·ªçc ƒë√∫ng gi√°
  /** N·ªôi dung hi·ªÉn th·ªã (ti√™u ƒë·ªÅ/m√¥ t·∫£/t√≠nh nƒÉng) */
  meta: PlanMeta
}

/** M·ªôt t√πy ch·ªçn gi√° theo k·ª≥ h·∫°n cho g√≥i th√°ng */
export interface PricingMonthlyOption {
  months: MonthlyTerm
  /** USD / khu v·ª±c / th√°ng cho k·ª≥ h·∫°n n√†y */
  pricePerRegionPerMonthUSD: number
}

/** C·∫•u h√¨nh g√≥i th√°ng */
export interface PricingPlanMonthly {
  options: PricingMonthlyOption[] // 1,3,6,9,12 th√°ng
  /** N·ªôi dung hi·ªÉn th·ªã (ti√™u ƒë·ªÅ/m√¥ t·∫£/t√≠nh nƒÉng) */
  meta: PlanMeta
}

/** C·∫•u h√¨nh hoa h·ªìng chia s·∫ª doanh thu */
export interface CommissionConfig {
  /**
   * % n·ªÅn t·∫£ng gi·ªØ l·∫°i (0-100).
   * Ph·∫ßn c·ªßa provider = 100 - platformPercent.
   */
  platformPercent: number
}

/** C·∫•u h√¨nh gi√° to√†n h·ªá th·ªëng (admin ch·ªânh trong trang Pricing) */
export interface PricingConfig {
  api: PricingPlanApi
  oneTime: PricingPlanOneTime
  monthly: PricingPlanMonthly
  commission: CommissionConfig
  updatedAt: string
}
