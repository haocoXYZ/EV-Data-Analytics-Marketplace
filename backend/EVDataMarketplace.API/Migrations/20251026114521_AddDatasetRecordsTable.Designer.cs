// <auto-generated />
using System;
using EVDataMarketplace.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EVDataMarketplace.API.Migrations
{
    [DbContext(typeof(EVDataMarketplaceDbContext))]
    [Migration("20251026114521_AddDatasetRecordsTable")]
    partial class AddDatasetRecordsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EVDataMarketplace.API.Models.APIPackage", b =>
                {
                    b.Property<int>("ApiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("api_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApiId"));

                    b.Property<int?>("ApiCallsPurchased")
                        .HasColumnType("int")
                        .HasColumnName("api_calls_purchased");

                    b.Property<int>("ApiCallsUsed")
                        .HasColumnType("int")
                        .HasColumnName("api_calls_used");

                    b.Property<string>("ApiKey")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("api_key");

                    b.Property<int?>("ConsumerId")
                        .HasColumnType("int")
                        .HasColumnName("consumer_id");

                    b.Property<int?>("DatasetId")
                        .HasColumnType("int")
                        .HasColumnName("dataset_id");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("expiry_date");

                    b.Property<decimal?>("PricePerCall")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price_per_call");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("purchase_date");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<decimal?>("TotalPaid")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_paid");

                    b.HasKey("ApiId");

                    b.HasIndex("ApiKey")
                        .IsUnique()
                        .HasFilter("[api_key] IS NOT NULL");

                    b.HasIndex("ConsumerId");

                    b.HasIndex("DatasetId");

                    b.ToTable("APIPackage");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.DataConsumer", b =>
                {
                    b.Property<int>("ConsumerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("consumer_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsumerId"));

                    b.Property<string>("BillingEmail")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("billing_email");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("contact_number");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("contact_person");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("OrganizationName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("organization_name");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("ConsumerId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("DataConsumer");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.DataProvider", b =>
                {
                    b.Property<int>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("provider_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProviderId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("company_name");

                    b.Property<string>("CompanyWebsite")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("company_website");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("contact_email");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("contact_phone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("ProviderId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("DataProvider");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.Dataset", b =>
                {
                    b.Property<int>("DatasetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("dataset_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DatasetId"));

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("DataFormat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("data_format");

                    b.Property<decimal?>("DataSizeMb")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("data_size_mb");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("FilePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("file_path");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_updated");

                    b.Property<string>("ModerationStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("moderation_status");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("PortId")
                        .HasColumnType("int")
                        .HasColumnName("port_id");

                    b.Property<int?>("ProviderId")
                        .HasColumnType("int")
                        .HasColumnName("provider_id");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<int?>("TierId")
                        .HasColumnType("int")
                        .HasColumnName("tier_id");

                    b.Property<DateTime?>("UploadDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("upload_date");

                    b.Property<string>("Visibility")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("visibility");

                    b.HasKey("DatasetId");

                    b.HasIndex("Category");

                    b.HasIndex("ModerationStatus");

                    b.HasIndex("ProviderId");

                    b.HasIndex("Status");

                    b.HasIndex("TierId");

                    b.ToTable("Dataset");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.DatasetModeration", b =>
                {
                    b.Property<int>("ModerationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("moderation_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModerationId"));

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comments");

                    b.Property<int?>("DatasetId")
                        .HasColumnType("int")
                        .HasColumnName("dataset_id");

                    b.Property<string>("ModerationStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("moderation_status");

                    b.Property<int?>("ModeratorUserId")
                        .HasColumnType("int")
                        .HasColumnName("moderator_user_id");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("review_date");

                    b.HasKey("ModerationId");

                    b.HasIndex("DatasetId");

                    b.HasIndex("ModeratorUserId");

                    b.ToTable("DatasetModeration");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.DatasetRecord", b =>
                {
                    b.Property<long>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RecordId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DatasetId")
                        .HasColumnType("int");

                    b.Property<string>("RecordData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.HasKey("RecordId");

                    b.HasIndex("DatasetId");

                    b.ToTable("DatasetRecords");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.OneTimePurchase", b =>
                {
                    b.Property<int>("OtpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("otp_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OtpId"));

                    b.Property<int?>("ConsumerId")
                        .HasColumnType("int")
                        .HasColumnName("consumer_id");

                    b.Property<int?>("DatasetId")
                        .HasColumnType("int")
                        .HasColumnName("dataset_id");

                    b.Property<int>("DownloadCount")
                        .HasColumnType("int")
                        .HasColumnName("download_count");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_date");

                    b.Property<string>("LicenseType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("license_type");

                    b.Property<int>("MaxDownload")
                        .HasColumnType("int")
                        .HasColumnName("max_download");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("purchase_date");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<decimal?>("TotalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_price");

                    b.HasKey("OtpId");

                    b.HasIndex("ConsumerId");

                    b.HasIndex("DatasetId");

                    b.ToTable("OneTimePurchase");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("payment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal?>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<int?>("ConsumerId")
                        .HasColumnType("int")
                        .HasColumnName("consumer_id");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notes");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("payment_date");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("payment_method");

                    b.Property<string>("PaymentType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("payment_type");

                    b.Property<string>("PayosOrderId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("payos_order_id");

                    b.Property<int?>("ReferenceId")
                        .HasColumnType("int")
                        .HasColumnName("reference_id");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("TransactionRef")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("transaction_ref");

                    b.HasKey("PaymentId");

                    b.HasIndex("ConsumerId");

                    b.HasIndex("PaymentDate");

                    b.HasIndex("Status");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.Payout", b =>
                {
                    b.Property<int>("PayoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("payout_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayoutId"));

                    b.Property<string>("BankAccount")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("bank_account");

                    b.Property<string>("MonthYear")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("month_year");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notes");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("payment_method");

                    b.Property<DateTime?>("PayoutDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("payout_date");

                    b.Property<string>("PayoutStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("payout_status");

                    b.Property<int?>("ProviderId")
                        .HasColumnType("int")
                        .HasColumnName("provider_id");

                    b.Property<decimal?>("TotalDue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_due");

                    b.Property<string>("TransactionRef")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("transaction_ref");

                    b.HasKey("PayoutId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Payout");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.PricingTier", b =>
                {
                    b.Property<int>("TierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tier_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TierId"));

                    b.Property<decimal?>("AdminCommissionPercent")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("admin_commission_percent");

                    b.Property<decimal?>("ApiPricePerCall")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("api_price_per_call");

                    b.Property<decimal?>("BasePricePerMb")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("base_price_per_mb");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<decimal?>("ProviderCommissionPercent")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("provider_commission_percent");

                    b.Property<decimal?>("SubscriptionPricePerRegion")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("subscription_price_per_region");

                    b.Property<string>("TierName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tier_name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("TierId");

                    b.ToTable("PricingTier");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.Province", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("province_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProvinceId"));

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("name");

                    b.HasKey("ProvinceId");

                    b.ToTable("Province");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.RevenueShare", b =>
                {
                    b.Property<int>("ShareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("share_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShareId"));

                    b.Property<decimal?>("AdminShare")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("admin_share");

                    b.Property<DateTime>("CalculatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("calculated_date");

                    b.Property<int?>("DatasetId")
                        .HasColumnType("int")
                        .HasColumnName("dataset_id");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int")
                        .HasColumnName("payment_id");

                    b.Property<string>("PayoutStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("payout_status");

                    b.Property<int?>("ProviderId")
                        .HasColumnType("int")
                        .HasColumnName("provider_id");

                    b.Property<decimal?>("ProviderShare")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("provider_share");

                    b.Property<decimal?>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_amount");

                    b.HasKey("ShareId");

                    b.HasIndex("DatasetId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("ProviderId");

                    b.ToTable("RevenueShare");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.Subscription", b =>
                {
                    b.Property<int>("SubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sub_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubId"));

                    b.Property<int?>("ConsumerId")
                        .HasColumnType("int")
                        .HasColumnName("consumer_id");

                    b.Property<int?>("DatasetId")
                        .HasColumnType("int")
                        .HasColumnName("dataset_id");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int")
                        .HasColumnName("province_id");

                    b.Property<string>("RenewalCycle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("renewal_cycle");

                    b.Property<string>("RenewalStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("renewal_status");

                    b.Property<int>("RequestCount")
                        .HasColumnType("int")
                        .HasColumnName("request_count");

                    b.Property<DateTime?>("SubEnd")
                        .HasColumnType("datetime2")
                        .HasColumnName("sub_end");

                    b.Property<DateTime?>("SubStart")
                        .HasColumnType("datetime2")
                        .HasColumnName("sub_start");

                    b.Property<decimal?>("TotalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_price");

                    b.HasKey("SubId");

                    b.HasIndex("ConsumerId");

                    b.HasIndex("DatasetId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("full_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Role");

                    b.ToTable("User");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.APIPackage", b =>
                {
                    b.HasOne("EVDataMarketplace.API.Models.DataConsumer", "DataConsumer")
                        .WithMany("APIPackages")
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EVDataMarketplace.API.Models.Dataset", "Dataset")
                        .WithMany("APIPackages")
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DataConsumer");

                    b.Navigation("Dataset");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.DataConsumer", b =>
                {
                    b.HasOne("EVDataMarketplace.API.Models.User", "User")
                        .WithOne("DataConsumer")
                        .HasForeignKey("EVDataMarketplace.API.Models.DataConsumer", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.DataProvider", b =>
                {
                    b.HasOne("EVDataMarketplace.API.Models.User", "User")
                        .WithOne("DataProvider")
                        .HasForeignKey("EVDataMarketplace.API.Models.DataProvider", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.Dataset", b =>
                {
                    b.HasOne("EVDataMarketplace.API.Models.DataProvider", "DataProvider")
                        .WithMany("Datasets")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EVDataMarketplace.API.Models.PricingTier", "PricingTier")
                        .WithMany("Datasets")
                        .HasForeignKey("TierId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DataProvider");

                    b.Navigation("PricingTier");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.DatasetModeration", b =>
                {
                    b.HasOne("EVDataMarketplace.API.Models.Dataset", "Dataset")
                        .WithMany("DatasetModerations")
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EVDataMarketplace.API.Models.User", "Moderator")
                        .WithMany("DatasetModerations")
                        .HasForeignKey("ModeratorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Dataset");

                    b.Navigation("Moderator");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.DatasetRecord", b =>
                {
                    b.HasOne("EVDataMarketplace.API.Models.Dataset", "Dataset")
                        .WithMany("DatasetRecords")
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dataset");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.OneTimePurchase", b =>
                {
                    b.HasOne("EVDataMarketplace.API.Models.DataConsumer", "DataConsumer")
                        .WithMany("OneTimePurchases")
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EVDataMarketplace.API.Models.Dataset", "Dataset")
                        .WithMany("OneTimePurchases")
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DataConsumer");

                    b.Navigation("Dataset");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.Payment", b =>
                {
                    b.HasOne("EVDataMarketplace.API.Models.DataConsumer", "DataConsumer")
                        .WithMany("Payments")
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DataConsumer");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.Payout", b =>
                {
                    b.HasOne("EVDataMarketplace.API.Models.DataProvider", "DataProvider")
                        .WithMany("Payouts")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DataProvider");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.RevenueShare", b =>
                {
                    b.HasOne("EVDataMarketplace.API.Models.Dataset", "Dataset")
                        .WithMany()
                        .HasForeignKey("DatasetId");

                    b.HasOne("EVDataMarketplace.API.Models.Payment", "Payment")
                        .WithMany("RevenueShares")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EVDataMarketplace.API.Models.DataProvider", "DataProvider")
                        .WithMany("RevenueShares")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DataProvider");

                    b.Navigation("Dataset");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.Subscription", b =>
                {
                    b.HasOne("EVDataMarketplace.API.Models.DataConsumer", "DataConsumer")
                        .WithMany("Subscriptions")
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EVDataMarketplace.API.Models.Dataset", "Dataset")
                        .WithMany("Subscriptions")
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EVDataMarketplace.API.Models.Province", "Province")
                        .WithMany("Subscriptions")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DataConsumer");

                    b.Navigation("Dataset");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.DataConsumer", b =>
                {
                    b.Navigation("APIPackages");

                    b.Navigation("OneTimePurchases");

                    b.Navigation("Payments");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.DataProvider", b =>
                {
                    b.Navigation("Datasets");

                    b.Navigation("Payouts");

                    b.Navigation("RevenueShares");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.Dataset", b =>
                {
                    b.Navigation("APIPackages");

                    b.Navigation("DatasetModerations");

                    b.Navigation("DatasetRecords");

                    b.Navigation("OneTimePurchases");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.Payment", b =>
                {
                    b.Navigation("RevenueShares");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.PricingTier", b =>
                {
                    b.Navigation("Datasets");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.Province", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("EVDataMarketplace.API.Models.User", b =>
                {
                    b.Navigation("DataConsumer");

                    b.Navigation("DataProvider");

                    b.Navigation("DatasetModerations");
                });
#pragma warning restore 612, 618
        }
    }
}
